services:
  echo:
    image: docker.io/denoland/deno:alpine
    command: |
      sh -c "deno run --allow-all - <<'EOF'

      import { encodeFunctionData, parseAbi } from 'npm:viem'

      // MESSAGE comes from: rofl.yaml secrets -> compose.yaml environment -> podman/docker
      const MESSAGE = Deno.env.get('MESSAGE') ?? 'No message found'
      const CONTRACT_ADDRESS = Deno.env.get('CONTRACT_ADDRESS')

      // Locally: docker compose up, open http://localhost:8000/abcd but can't submit tx
      Deno.serve({ port: 8000 }, async (req) => {
        try {
          const calldata = encodeFunctionData({
            abi: parseAbi(['function emitMessage(string memory message) public']),
            functionName: 'emitMessage',
            args: [MESSAGE + '' + req.url]
          })

          console.log({calldata}) // Visible in machine logs, unencrypted

          // Submit it to the Sapphire contract Echo.sol on testnet
          await fetch('http://localhost/rofl/v1/tx/sign-submit', {
            method: 'POST',
            body: JSON.stringify({
              'encrypt': true,
              'tx': {
                'kind': 'eth',
                'data': {
                  'gas_limit': 200000,
                  'to': CONTRACT_ADDRESS.replace('0x', ''),
                  'value': 0,
                  'data': calldata.replace('0x', '')
                }
              }
            }),
            client: Deno.createHttpClient({ proxy: { transport: 'unix', path: '/run/rofl-appd.sock' } }),
          });
        } catch (err) {
          return new Response('Failed to send a transaction. ' + req.url);
        }
        return new Response('Transaction sent! ' + req.url);
      });

      EOF
      "
    platform: linux/amd64
    ports:
      - "8000:8000"
    environment:
      # Address of the Echo contract deployed on Sapphire.
      # https://explorer.oasis.io/testnet/sapphire/address/0x5d683b980615A7A60B3cFf3DFC338A9985278fF3
      - CONTRACT_ADDRESS=0x5d683b980615A7A60B3cFf3DFC338A9985278fF3
      - MESSAGE=${MESSAGE}
    volumes:
      - /run/rofl-appd.sock:/run/rofl-appd.sock
